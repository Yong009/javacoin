<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bitcoin.mapper.coinmapper">

	 <select id="getUser" resultType="com.example.bitcoin.dto.MemberVO">
	 	select * from member
	 	where id = #{id}

	 </select>

	 <!-- 로그인 -->
	 <select id ="getUserById" resultType="com.example.bitcoin.dto.MemberVO">
	 	 SELECT *
	 	   from member
	 	  where id = #{id}

 	</select>

	<!-- 회원가입 -->
	<insert id="join" parameterType="com.example.bitcoin.dto.MemberVO">
		insert into member ( id, password, role )
		   			values ( #{id},#{password}, #{role} )

	</insert>


	<!-- 코드가져오기 -->
	<select id="getCode" parameterType="String" resultType="com.example.bitcoin.dto.MemberVO">
		SELECT *
		  FROM member
		where id = #{id}
	</select>

 	<!-- 코드 저장 -->
  	<update id="saveCode" parameterType="String">
  		update member
  		  set accessCode= #{accessCode},
  		  	  secretCode= #{secretCode}
  		  where id = #{id}
   </update>

	<!-- 게시판 전체 -->
  	<select id="getList" resultType="com.example.bitcoin.dto.BoardVO">
		SELECT *
		 from board
		 order by SEQ
		 limit 10 offset 0
	</select>

	<!--자동매매 켜기-->
	<update id="autoOn" parameterType="String">
		update member
		   set auto = 'Y'
		  where id = #{id}
	</update>


	<!-- 자동매매 끄기 -->
	<update id="autoStop" parameterType="String">
		update member
		  set auto = 'N'
		  where id = #{id}
	</update>

	<!--자동매매 모니터링!-->
	<select id="getMemberAuto" resultType="com.example.bitcoin.dto.MemberVO">
		SELECT *
		  from member
		 where auto =#{auto}
	</select>

	<!--회원정보 수정 !-->
	<update id="updateMember" parameterType="String">
		update member
		  set password = #{password},
			  accessCode= #{accessCode},
			  secretCode= #{secretCode}
		where id = #{id}
	</update>

	<!-- 전체 회원 !-->
	<select id="getMemberAll" resultType="com.example.bitcoin.dto.MemberVO">
		SELECT *
		from member
	</select>

	<!--회원탈퇴-!-->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM member
		where id = #{id}
	</delete>

	<!--회원가입-!-->
	<insert id="membereJoin" parameterType="String">
		INSERT INTO MEMBER (id,password)
		 values(#{id},'1111')
	</insert>

	<!--아디 중복 체크 !-->
	<select id="checkId" parameterType="String" resultType="java.lang.Integer">
		SELECT COUNT(*)
		 from member
		where id = #{id}
	</select>

	<!-- 게시판 등록 -->
	<insert id="insertBoard" parameterType="String">
		insert into board (title,writer,writeDate,viewCount,textWrite)
		  values ( #{title},#{writer},(SELECT SYSDATE()),0, #{textWrite})
	</insert>

	<!-- 게시판 상세 내용 -->
	<select id="getListDetail" resultType="com.example.bitcoin.dto.BoardVO">
		SELECT *
		  FROM board
		  WHERE SEQ = #{seq}

	</select>

	<!-- 게시판 내용 수정 -->
	<update id="updateBoard" >
		UPDATE board
		     set title = #{title},
		         writeDate = (SELECT SYSDATE()),
		         textWrite = #{textWrite}
		  WHERE SEQ = #{seq}
	</update>

	<!-- 조회수 증가 -->
	<update id = "updateView">
		UPDATE board
		   set viewCount = viewCount+1
		  where SEQ = #{seq}
	</update>

	<!-- 게시판 글 삭제 -->
	<delete id="deleteBoard">
		DELETE FROM board
		  WHERE SEQ = #{seq}
	</delete>

	<!-- 댓글 불러오기 -->
	<select id="getComment">
		SELECT *
		  from comment
		 WHERE BOARDSEQ = #{boardSeq}
	</select>

	<!-- 댓글삭제 -->
	<delete id="deleteComment">
		DELETE FROM comment
		  WHERE seq = #{seq}

	</delete>

	<!-- 댓글 등록 -->
	<insert id="insertComment">
		INSERT INTO comment (textWrite,writer,boardSeq,writeDate)
		  values(#{textWrite},#{writer},#{boardSeq},(SELECT SYSDATE()))
	</insert>

	<!-- 건의 사항 불러오기 -->
	<select id="getQuestion" resultType="com.example.bitcoin.dto.QuestionVO">
		SELECT *
		 FROM question

	</select>

	<!-- 건의 사항 불러오기 개인 -->
	<select id="getQuestion2" resultType="com.example.bitcoin.dto.QuestionVO">
		SELECT *
		  FROM question
		  where writer = #{writer}
	</select>

	<!-- 건의 사항 디테일 -->
	<select id="getQuestionDetail" resultType="com.example.bitcoin.dto.QuestionVO">
		SELECT *
		  FROM question
		  where SEQ = #{seq}

	</select>

	<!-- 변동성 돌파 전략 스케줄러 체크 -->
	<select id="autoCheck" resultType="com.example.bitcoin.dto.MemberVO">
		SELECT *
		  FROM member
		  WHERE ACCESSCODE is not null
		    and SECRETCODE is not null
			and auto = 'Y'
	</select>

	<!-- 관리자가 자동매매 끄기 -->
	<update id="manageAuto">
		UPDATE member
		  SET AUTO = 'N'
		 WHERE id = #{id}
	</update>

	<!-- 페이징 -->
	<select id="getLists" resultType="com.example.bitcoin.dto.BoardVO">
	 	SELECT *
	 	  FROM board
	 	  order by SEQ
	 	  limit 10 offset #{offSet}

	</select>

	<!-- 게시판 글 수 -->
	<select id="getMax" resultType="java.lang.Integer">
		SELECT MAX(SEQ)
		  FROM board

	</select>

	<!-- 자동매매 금액 저장 -->
	<update id="saveAutoPrice">
		UPDATE member
		   SET autoPrice = #{autoPrice}
		 WHERE id = #{id}
	</update>

	<!-- 자동매매중 매수 금액 저장 -->
	<update id="saveOrderPrice">
		UPDATE member
		   SET orderPrice = #{orderPrice}
		 WHERE id = #{id}
	</update>
</mapper>